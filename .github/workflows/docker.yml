name: Docker
on:
  push:
    branches:
      - alpha
      - beta
      - main
jobs:
  docker:
    if: github.actor == 'sentrei-bot'
    runs-on: ubuntu-latest
    steps:
      - uses: nelonoel/branch-name@v1
      - uses: chrnorm/deployment-action@releases/v1
        id: deployment
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          ref: ${{ env.BRANCH_NAME }}
          environment: "Docker ${{ env.BRANCH_NAME }} "
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
          submodules: true
      - uses: actions/setup-node@v2.1.1
        with:
          node-version: "14.4.0"
      - uses: actions/cache@v2.1.1
        with:
          path: |
            **/node_modules
          key: |
            yarn-v1-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-v1-${{ runner.os }}-
      - run: |
          yarn install --frozen-lockfile
      - run: |
          yarn run typescript
      - uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ github.repository }}
          tags: ${{ env.BRANCH_NAME }}
          cache_froms: ${{ github.repository }}:${{ env.BRANCH_NAME }}
          dockerfile: packages/web/dev.Dockerfile
          path: "."
          always_pull: true
          add_git_labels: true
          tag_with_ref: true
          tag_with_sha: true
          push: true
      - if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
